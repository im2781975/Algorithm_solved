#include <bits/stdc++.h>
using namespace std;
 
int findMax(int arr[], int n)
{
    stack<int> s;
    int max = 0;
 
    // traverse the array from left to right
    for (int i = 0; i < n; i++) {
        // push the index onto the stack if the element is
        // less than or equal to the previous element
        if (s.empty() || arr[i] <= arr[s.top()]) {
            s.push(i);
        }
        else {
            // pop all the indices from the stack until we
            // find an index whose corresponding element is
            // greater than the current element
            while (!s.empty() && arr[i] > arr[s.top()]) {
                int index = s.top();
                s.pop();
                // update the maximum element
                if (arr[index] > max) {
                    max = arr[index];
                }
            }
            // push the current index onto the stack
            s.push(i);
        }
    }
 
    // the maximum element is the element corresponding to
    // the last index remaining on the stack
    while (!s.empty()) {
        int index = s.top();
        s.pop();
        if (arr[index] > max) {
            max = arr[index];
        }
    }
 
    return max;
}
int main()
{
 
    int arr[] = { 1, 3, 50, 10, 9, 7, 6 };
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "The maximum element is "
         << findMax(arr, n);
 
    return 0;
}
